#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Teste de todas as importa√ß√µes para identificar problemas
"""

import sys
import os

# Adicionar shared ao path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'shared'))

def test_imports():
    """Testa todas as importa√ß√µes cr√≠ticas"""
    print("üîç Testando importa√ß√µes...")
    
    # Teste 1: M√≥dulos b√°sicos
    try:
        import requests
        print("‚úÖ requests")
    except ImportError as e:
        print(f"‚ùå requests: {e}")
    
    try:
        import pandas as pd
        print("‚úÖ pandas")
    except ImportError as e:
        print(f"‚ùå pandas: {e}")
    
    try:
        import matplotlib.pyplot as plt
        print("‚úÖ matplotlib")
    except ImportError as e:
        print(f"‚ùå matplotlib: {e}")
    
    try:
        import numpy as np
        print("‚úÖ numpy")
    except ImportError as e:
        print(f"‚ùå numpy: {e}")
    
    # Teste 2: M√≥dulos locais
    try:
        from config import PLAYNABETS_WS_URL
        print("‚úÖ config")
    except ImportError as e:
        print(f"‚ùå config: {e}")
    
    try:
        from auth import require_auth
        print("‚úÖ auth")
    except ImportError as e:
        print(f"‚ùå auth: {e}")
    
    try:
        from playnabets_integrator import PlayNabetsIntegrator
        print("‚úÖ playnabets_integrator")
    except ImportError as e:
        print(f"‚ùå playnabets_integrator: {e}")
    
    # Teste 3: M√≥dulos do shared
    try:
        from blaze_analyzer_enhanced import BlazeAnalyzerEnhanced
        print("‚úÖ blaze_analyzer_enhanced")
    except ImportError as e:
        print(f"‚ùå blaze_analyzer_enhanced: {e}")
    
    try:
        from src.notifications.pattern_notifier import get_notifier
        print("‚úÖ pattern_notifier")
    except ImportError as e:
        print(f"‚ùå pattern_notifier: {e}")
    
    try:
        from src.database.local_storage_db import local_db
        print("‚úÖ local_storage_db")
    except ImportError as e:
        print(f"‚ùå local_storage_db: {e}")

if __name__ == "__main__":
    test_imports()
